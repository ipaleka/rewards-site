---
- name: Check if XLSX file already exists
  ansible.builtin.stat:
    path: "{{ site_path }}/source/{{ app_name }}/fixtures/contributions.xlsx"
  register: projectsetup_sheet_stat
  become: true
  tags: [project-setup, excel2db]

- name: Download Google Sheet as XLSX (only if missing)
  ansible.builtin.get_url:
    url: "https://docs.google.com/spreadsheets/d/{{ contributions_google_sheet_id }}/export?format=xlsx"
    dest: "{{ site_path }}/source/{{ app_name }}/fixtures/contributions.xlsx"
    owner: "{{ webapp_user }}"
    group: "{{ webapp_group }}"
    mode: "0755"
    force: true
  become: true
  when:
    - contributions_google_sheet_id is defined
    - not projectsetup_sheet_stat.stat.exists
  notify: Run excel2db management command
  tags: [project-setup, excel2db, google-sheet]

- name: Get username running the playbook
  ansible.builtin.command: whoami
  delegate_to: localhost
  delegate_facts: false
  run_once: true
  register: projectsetup_host_username_data
  changed_when: false
  vars:
    ansible_connection: local
  tags: [project-setup, excel2db]

- name: Copy user data from local host
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/../rewardsweb/fixtures/{{ item }}"
    dest: "{{ site_path }}/source/{{ app_name }}/fixtures/{{ item }}"
    owner: "{{ webapp_user }}"
    group: "{{ webapp_group }}"
    mode: "0600"
  become: true
  loop:
    - addresses.csv
    - users_without_addresses.csv
  when: not (is_molecule_test | default(false))
  tags: [project-setup, excel2db, user-data]
