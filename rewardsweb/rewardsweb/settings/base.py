"""
Django settings for rewardsweb project.

Generated by 'django-admin startproject' using Django 4.2.18.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

from dotenv import load_dotenv

from utils.helpers import get_env_variable

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv(BASE_DIR.parent / ".env")
load_dotenv(BASE_DIR.parent / "rewardsbot" / ".env")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_env_variable("SECRET_KEY", "")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    "core.apps.CoreConfig",
    "walletauth.apps.WalletauthConfig",
    "template_partials",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.postgres",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.discord",
    "allauth.socialaccount.providers.github",
    "allauth.socialaccount.providers.google",
    "allauth.socialaccount.providers.reddit",
    "allauth.socialaccount.providers.twitter_oauth2",
    "adrf",
    "rest_framework",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "allauth.account.middleware.AccountMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

AUTHENTICATION_BACKENDS = [
    "allauth.account.auth_backends.AuthenticationBackend",
]

ROOT_URLCONF = "rewardsweb.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "rewardsweb.wsgi.application"

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# allauth
ACCOUNT_ADAPTER = "core.adapters.NoSignupAccountAdapter"
ACCOUNT_LOGIN_METHODS = {"username", "email"}
LOGIN_REDIRECT_URL = "/"
ACCOUNT_EMAIL_VERIFICATION = "optional"
ACCOUNT_EMAIL_SUBJECT_PREFIX = ""
ACCOUNT_DEFAULT_HTTP_PROTOCOL = "http"
SOCIALACCOUNT_QUERY_EMAIL = True
ACCOUNT_LOGOUT_ON_GET = True
SOCIALACCOUNT_EMAIL_VERIFICATION = "none"
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True
ACCOUNT_USER_DISPLAY = "utils.helpers.user_display"

SOCIALACCOUNT_PROVIDERS = {
    # https://discord.com/developers/applications
    "discord": {
        "APP": {
            "client_id": get_env_variable("DISCORD_APPLICATION_ID", ""),
            "secret": get_env_variable("DISCORD_SECRET", ""),
            "key": get_env_variable("DISCORD_PUBLIC_KEY", ""),
        }
    },
    # https://developer.x.com/en/portal/projects-and-apps
    "twitter_oauth2": {
        "APP": {
            "client_id": get_env_variable("TWITTER_CLIENT_ID", ""),
            "secret": get_env_variable("TWITTER_SECRET", ""),
            "key": "",
        }
    },
    # https://www.reddit.com/prefs/apps/
    "reddit": {
        "APP": {
            "client_id": get_env_variable("REDDIT_CLIENT_ID", ""),
            "secret": get_env_variable("REDDIT_SECRET", ""),
            "key": "",
        },
        "SCOPE": ["identity"],
        "USER_AGENT": "django:eIdhm4jSx-TM772A96uC7Q:1.0 (by /u/hopemeetme)",
    },
    # https://github.com/settings/developers
    "github": {
        "VERIFIED_EMAIL": True,
        "APP": {
            "client_id": get_env_variable("GITHUB_CLIENT_ID", ""),
            "secret": get_env_variable("GITHUB_SECRET", ""),
            "key": "",
        },
    },
    # https://console.developers.google.com/
    "google": {
        "APP": {
            "client_id": get_env_variable("GOOGLE_CLIENT_ID", ""),
            "secret": get_env_variable("GOOGLE_SECRET", ""),
            "key": "",
        },
        "SCOPE": [
            "profile",
            "email",
        ],
        "AUTH_PARAMS": {
            "access_type": "online",
        },
        "OAUTH_PKCE_ENABLED": True,
    },
}


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [
    BASE_DIR.parent / "static",
]

STATIC_ROOT = BASE_DIR.parent.parent.parent / "static"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

REST_FRAMEWORK = {
    "DEFAULT_RENDERER_CLASSES": [
        "rest_framework.renderers.JSONRenderer",
    ],
    "DEFAULT_PARSER_CLASSES": [
        "rest_framework.parsers.JSONParser",
    ],
}

GITHUB_REPO_OWNER = "asastats"
GITHUB_REPO_NAME = "channel"  # "rewards-site"
