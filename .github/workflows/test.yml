name: build

on:
  push:
    branches: [ "development" ]
  pull_request:
    branches: [ "main" ]
  workflow_call:
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  backend:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: rewards_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r rewardsweb/requirements/development.txt

      - name: "Create env file"
        run: |
          touch rewardsweb/.env
          echo SECRET_KEY="mysecretkey" >> rewardsweb/.env
          echo DATABASE_NAME="rewards_db" >> rewardsweb/.env
          echo DATABASE_USER="postgres" >> rewardsweb/.env
          echo DATABASE_PASSWORD="postgres" >> rewardsweb/.env
          echo DISCORD_GUILD_IDS="906917846754418770" >> rewardsweb/.env
          echo DISCORD_BOT_TOKEN=${{ secrets.DISCORD_BOT_TOKEN }} >> rewardsweb/.env

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Run tests with coverage
        env:
          DJANGO_SETTINGS_MODULE: rewardsweb.settings.development
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/rewards_db
          PYTHONPATH: ${{ github.workspace }}
        run: |
          cd rewardsweb
          python -m pytest . --ds=rewardsweb.settings.development -v --cov --cov-branch --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  frontend:
    runs-on: ubuntu-latest
    needs: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: "rewardsweb/frontend/package-lock.json"

      - name: Install dependencies
        run: |
          cd rewardsweb/frontend
          npm ci

      - name: Run frontend tests with coverage
        run: |
          cd rewardsweb/frontend
          npm run test:coverage

      - name: Upload frontend coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: rewardsweb/frontend/coverage
          flags: frontend
          name: frontend-coverage
